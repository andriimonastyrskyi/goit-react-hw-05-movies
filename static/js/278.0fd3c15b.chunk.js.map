{"version":3,"file":"static/js/278.0fd3c15b.chunk.js","mappings":"mUAEaA,EAAcC,EAAAA,QAAAA,GAAH,iGAOXC,EAAYD,EAAAA,QAAAA,GAAH,8PAaTE,EAAaF,EAAAA,QAAAA,IAAH,sLAUVG,EAAYH,EAAAA,QAAAA,IAAH,oHAOTI,EAAYJ,EAAAA,QAAAA,EAAH,iHAOTK,EAAaL,EAAAA,QAAAA,GAAH,8C,yHC8BvB,UA/De,WACb,OAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCC,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWF,EAAOG,IAAI,SAItBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACO,OAAXN,GAA8B,KAAXA,IACvBO,EAAAA,EAAAA,IAAgBL,GAAUM,KAAKV,EAChC,GAAE,CAACE,EAAQE,IASZ,OACE,iCACE,kBAAMO,OAAO,GAAGC,SATC,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfb,EAAgB,CAAEc,MAAOJ,EAAEG,OAAOE,SAASD,MAAME,QACjDJ,EAAKK,OACN,EAIG,WACE,SAAC,IAAD,CACEC,KAAK,QACLC,MAAM,YACNC,GAAG,iBACHC,MAAM,cACNC,QAAQ,cAGV,SAAC,IAAD,CAAQC,KAAK,SAASD,QAAQ,WAAWE,KAAK,SAASC,GAAI,CAAEC,GAAI,GAAjE,uBAID9B,IACC,SAAC,KAAD,UACGA,EAAM+B,KAAI,SAAAC,GACT,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGR,IAAMU,MAAO,CAAEC,KAAM5B,GAA7C,WACE,SAAC,KAAD,CACE6B,IACEJ,EAAGK,YAxCP,mCAwC+BL,EAAGK,YAtChD,6GAwCgBC,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,SAAC,KAAD,WACE,SAAC,KAAD,UAAYR,EAAGS,MAAQT,EAAGS,MAAQT,EAAGV,aAX3BU,EAAGR,GAgBtB,QAKV,C,kMCxEKkB,EAAM,mCAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACcC,EAAAA,EAAAA,GAAM,mBAAoB,CAC3CC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAAKA,KAAKC,SANZ,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BzB,GAA7B,wFACcoB,EAAAA,EAAAA,GAAM,SAAD,OAAUpB,GAAM,CACtCqB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAAKA,MAPP,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgC1B,GAAhC,wFACcoB,EAAAA,EAAAA,GAAM,SAAD,OAAUpB,EAAV,YAAwB,CAC9CqB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAAKA,MAPP,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgC3B,GAAhC,wFACcoB,EAAAA,EAAAA,GAAM,SAAD,OAAUpB,EAAV,YAAwB,CAC9CqB,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAAKA,MAPP,kEAUA,SAAerC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BQ,GAA/B,wFACc0B,EAAAA,EAAAA,GAAM,eAAgB,CACvCC,OAAQ,CACNC,QAASJ,EACTxB,MAAOA,EACPkC,SAAU,QACVC,KAAM,KANL,cACCN,EADD,yBAUEA,EAAKA,KAAKC,SAVZ,kEAvCPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/Home/Home.styled.js","pages/Movies/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  list-style: none;\n`;\n\nexport const PhotoCard = styled.li`\n  position: relative;\n  display: block;\n  width: 100%;\n  cursor: pointer;\n  transition: filter 300ms ease-in-out;\n  &:hover,\n  &:focus {\n    filter: drop-shadow(1px 1px 15px black);\n  }\n  width: calc((100% - 32px) / 3);\n`;\n\nexport const MovieImage = styled.img`\n  border-radius: 5px;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: filter 300ms ease-in-out;\n  max-width: 350px;\n  height: 500px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 16px;\n  padding-top: 12px;\n`;\n\nexport const FilmTitle = styled.p`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 19.5px;\n  line-height: 1.2;\n`;\n\nexport const MovieTitle = styled.h1`\n  text-align: center;\n`;\n","// import { TextField } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, TextField } from '@mui/material';\nimport { fetchSearchFilm } from 'services/fetchApi';\nimport {\n  FilmTitle,\n  GalleryList,\n  MovieImage,\n  MovieInfo,\n  PhotoCard,\n} from '../Home/Home.styled';\n\nconst Movies = () => {\n  const [event, setEvent] = useState([]);\n  const [search, setSearchParams] = useSearchParams();\n  const filmName = search.get('query');\n  const baseURL = 'https://image.tmdb.org/t/p/w500/';\n  const noImagePoster =\n    'https://cdn.vectorstock.com/i/preview-1x/82/99/no-image-available-like-missing-picture-vector-43938299.jpg';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (search === null || search === '') return;\n    fetchSearchFilm(filmName).then(setEvent);\n  }, [search, filmName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setSearchParams({ query: e.target.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <TextField\n          name=\"query\"\n          color=\"secondary\"\n          id=\"outlined-basic\"\n          label=\"Search Film\"\n          variant=\"outlined\"\n        />\n\n        <Button type=\"submit\" variant=\"outlined\" size=\"medium\" sx={{ ml: 2 }}>\n          Search\n        </Button>\n      </form>\n      {event && (\n        <GalleryList>\n          {event.map(el => {\n            return (\n              <PhotoCard key={el.id}>\n                <Link to={`/movies/${el.id}`} state={{ from: location }}>\n                  <MovieImage\n                    src={\n                      el.poster_path ? baseURL + el.poster_path : noImagePoster\n                    }\n                    alt=\"\"\n                    width=\"500\"\n                    height=\"750\"\n                  />\n                  <MovieInfo>\n                    <FilmTitle>{el.title ? el.title : el.name}</FilmTitle>\n                  </MovieInfo>\n                </Link>\n              </PhotoCard>\n            );\n          })}\n        </GalleryList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = 'fe2081c2f49497d6a2d78b7f4a32d1d7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingFilms() {\n  const data = await axios('trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.data.results;\n}\nexport async function fetchFilmById(id) {\n  const data = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\nexport async function fetchFilmReviews(id) {\n  const data = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\n\nexport async function fetchFilmCredits(id) {\n  const data = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\n\nexport async function fetchSearchFilm(query) {\n  const data = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.data.results;\n}\n"],"names":["GalleryList","styled","PhotoCard","MovieImage","MovieInfo","FilmTitle","MovieTitle","useState","event","setEvent","useSearchParams","search","setSearchParams","filmName","get","location","useLocation","useEffect","fetchSearchFilm","then","action","onSubmit","e","preventDefault","form","target","query","elements","value","reset","name","color","id","label","variant","type","size","sx","ml","map","el","to","state","from","src","poster_path","alt","width","height","title","KEY","fetchTrendingFilms","axios","params","api_key","data","results","fetchFilmById","fetchFilmReviews","fetchFilmCredits","language","page"],"sourceRoot":""}